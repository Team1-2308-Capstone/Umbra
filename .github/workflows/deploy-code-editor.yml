name: Build and Deploy Code Execution Server to AWS Lightsail

on:
  push:
    branches:
      - github-workflow-11-02
  workflow_dispatch:

env:
  AWS_REGION: us-west-2
  AWS_LIGHTSAIL_SERVICE_NAME: ls-capstone-team-1-gh-actions-code-editor-server
jobs:
  build_and_deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout pg-api
        uses: actions/checkout@v2

      - name: Create .env file
        run: |
          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} >> .env
          echo AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} >> .env
          echo AWS_COGNITO_REGION=${{ secrets.AWS_COGNITO_REGION }} >> .env
          echo COGNITO_USER_POOL_ID=${{ secrets.COGNITO_USER_POOL_ID }} >> .env
          echo .env

      - name: Install Utilities
        run: |
          sudo apt-get update
          sudo apt-get install -y jq unzip
        
      - name: Install AWS Client
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install || true
          aws --version
          curl "https://s3.us-west-2.amazonaws.com/lightsailctl/latest/linux-amd64/lightsailctl" -o "lightsailctl"
          sudo mv "lightsailctl" "/usr/local/bin/lightsailctl"
          sudo chmod +x /usr/local/bin/lightsailctl

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build Docker Image
        run: docker build -t ${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}:release .

      - name: Print container.template.json
        run: cat container.template.json

      - name: Push Image
        run: |
          service_name=${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}
          aws lightsail push-container-image \
            --region ${{ env.AWS_REGION }} \
            --service-name ${service_name} \
            --label ${service_name} \
            --image ${service_name}:release
          echo "Pushed image: ${service_name}:release"
          container_images=$(aws lightsail get-container-images --service-name ${service_name})
          echo "Container images: $container_images"
          image=$(echo "$container_images" | jq --raw-output ".containerImages[0].image")
          echo "Extracted image: $image"
          echo $image > image.txt
      
      - name: Update container image with Python and Deploy
        run: |
          python3 update_image.py
          service_name=${{ env.AWS_LIGHTSAIL_SERVICE_NAME }}
          aws lightsail create-container-service-deployment --service-name ${service_name} --cli-input-json file://$(pwd)/container.json || echo "Failed to deploy"
      - name: Echo image.txt file
        run: cat image.txt

      - name: Echo container.json file
        run: cat container.json